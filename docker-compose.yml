services:
  identity-api:
    build:
      context: ./src/Services/IdentityService
      dockerfile: Identity.Api/Dockerfile
    container_name: identity-api
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Production}
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=identity-db;Database=IdentityDb;User=sa;Password=${IDENTITY_DB_SA_PASSWORD:-Your_strong_Password123};TrustServerCertificate=True
      - JwtSettings__Secret=${JwtSettings__Secret}
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - internal-net
      - public-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - ${LOGS_VOLUME:-./logs/identity-api}:/app/logs
    depends_on:
      - identity-db

  identity-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: identity-db
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${IDENTITY_DB_SA_PASSWORD:-Your_strong_Password123}
      - MSSQL_PID=Developer
    ports:
      - "14330:1433"
    networks:
      - internal-net
    volumes:
      - identity_data:/var/opt/mssql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          '/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${IDENTITY_DB_SA_PASSWORD:-Your_strong_Password123}" -Q "SELECT 1" || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

networks:
  public-net:
  internal-net:
    internal: true

volumes:
  identity_data:
